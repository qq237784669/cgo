<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cgo.db.mapper.web_module.vehicle.VehicleMapper">




    <select id="findAllVehiclePositioning" resultType="map">

        DECLARE @nowDay DATETIME

        SELECT @nowDay = Cast(CONVERT(VARCHAR, Getdate(), 112) AS DATETIME)

        DECLARE @Now DATETIME

        SET @Now=Getdate()

        SELECT CONVERT(VARCHAR(30), @Now, 21)              AS queryEndTime,
        CONVERT(VARCHAR(30), cp.GpsTime, 21)        AS gpsTime,
        CONVERT(VARCHAR(30), cp.ReceTime, 20)       AS receTime,
        cp.ADRSpeed as adrSpeed,
        v.OrgId as orgId,
        v.VehicleId                                 AS vehicleId,
        v.plateNum,
        cp.Longitude as lng,
        cp.Latitude as lat,
        cp.AlarmFlag as alarmFlag,
        cp.StateFlag as stateFlag,
        dbo.Fnwmon_getstateflagname(cp.StateFlag)   AS vehicleState,
        cp.Speed as speed,
        cp.Direction as direction,
        cp.altitude,
        pc.ColorName as vehicleColor,
        Isnull(v.DVRTypeCode, 0)                    AS dvrTypeCode,
        Isnull(v.DVRChannelNum, 0)                  AS dvrChannelNum,
        isOnline=( CASE
        WHEN cp.recetime IS NOT NULL
        AND cp.recetime > Dateadd(SECOND, -( CASE
        WHEN bvc.VehicleOfflineTimeOut IS NULL THEN 5 * 60
        WHEN bvc.VehicleOfflineTimeOut > 0 THEN bvc.VehicleOfflineTimeOut
        ELSE 5 * 60
        END ), Getdate()) THEN 1
        ELSE 0
        END ),
        v.realSimNum,
        CONVERT(VARCHAR(30), v.SVRStartTime, 21)    AS svrStartTime,
        CONVERT(VARCHAR(30), v.SVREndTime, 21)      AS svrEndTime,
        Isnull(d.DriverName, '')                    AS driverName,
        Isnull(d.DriverTelephone, '')               AS driverTel,
        stopTime=0,
        Isnull(cp.ResidualFuel, 0)                  AS residualFuel,
        cp.Mileage as mileage,
        v.SimNum as simNum,
        CONVERT(VARCHAR(30), cp.LastUpdateTime, 21) AS lastUpdateTime,
        tp.TerminalTypeName as terminalTypeName,
        ( CASE
        WHEN t.Mileage IS NULL
        OR ( cp.Mileage - t.Mileage ) &lt; 0 THEN 0
        ELSE cp.Mileage - t.Mileage
        END )                                     AS todayMileageCount
        FROM   bas_Vehicle v WITH(NOLOCK)
        LEFT JOIN bas_TerminalType tp WITH(NOLOCK)
        ON v.TerminalTypeId = tp.TerminalTypeId
        LEFT JOIN std_PlateColor pc WITH(NOLOCK)
        ON v.ColorCode = pc.ColorCode
        LEFT JOIN bas_Driver d WITH(NOLOCK)
        ON v.SimNum = d.SimNum
        LEFT JOIN [bas_VehicleConfig] bvc
        ON v.VehicleId = bvc.VehicleId
        INNER JOIN biz_CurrentPos cp WITH(NOLOCK)
        ON v.SimNum = cp.SimNum
        LEFT JOIN biz_TodayStartPos t WITH(NOLOCK)
        ON cp.SimNum = t.SimNum
        AND t.GpsTime > @nowDay
        WHERE  cp.LastUpdateTime &lt;= @Now

        AND cp.LastUpdateTime &gt; #{date}
    </select>

    <select id="findTrack" resultType="java.util.Map" parameterType="vehicleTrack">
        DECLARE @simNum VARCHAR(20)

        SELECT @simNum = SimNum
        FROM   bas_Vehicle WITH(NOLOCK)
        WHERE  VehicleId = #{vehicleId}

        SELECT CONVERT(VARCHAR(20), GpsTime, 120)     AS gpsTime,
        Longitude as lng,
        Latitude as lat,
        AlarmFlag as alarmFlag,
        StateFlag as stateFlag,
        dbo.Fnwmon_getstateflagname(StateFlag) AS vehicleState,
        speed,
        direction,
        altitude,
        TotalCount,
        mileage
        FROM   (SELECT td.GpsTime,
        td.Longitude,
        td.Latitude,
        td.AlarmFlag,
        td.StateFlag,
        td.speed,
        td.Direction,
        td.Altitude,
        td.Mileage,
        Row_number()
        OVER(
        ORDER BY GpsTime) AS RowNum,
        Count(*)
        OVER()              AS TotalCount
        FROM   View_TrackData td WITH(NOLOCK)
        WHERE  SimNum = @simNum
        AND gpstime >= #{beginTime}
        AND gpstime &lt;= #{endTime}
        AND speed >= #{minSpeed}
        AND td.Latitude > 0
        AND td.Longitude > 0) T
        WHERE  T.RowNum >= #{startRow}
        AND ( #{endRow} = 0
        OR T.RowNum &lt;= #{endRow} )
    </select>


</mapper>
